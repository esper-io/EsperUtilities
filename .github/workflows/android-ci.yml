name: Check and Delete Existing Release

on:
  push:
    branches:
      - master

jobs:
  check_and_delete_release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out repository with all history and tags
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Fetch all tags
        run: git fetch --tags

      # Step 2: Calculate BUILD_NUMBER based on latest tag
      - name: Calculate BUILD_NUMBER
        id: build_number
        run: |
          # Get the latest tag in the format vX.XX.XXXX
          latest_tag=$(git describe --tags --match "v[0-9]*.[0-9]*.[0-9]*" --abbrev=0 2>/dev/null || echo "v1.01.0000")
    
          # Extract and increment the build number
          latest_build_number=$(echo "$latest_tag" | awk -F '.' '{print $NF}')
          BUILD_NUMBER=$(printf "%04d" $((10#$latest_build_number + 1)))
    
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
          echo "Calculated BUILD_NUMBER: $BUILD_NUMBER"
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV

      # Step 3: Check if a release with the calculated tag exists and delete if necessary
      - name: Check and Delete Existing Release
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const tagName = process.env.latest_tag;
            const { data: releases } = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            // Find release with the tag name
            const existingRelease = releases.find(release => release.tag_name === tagName);

            if (existingRelease) {
              console.log(`Release with tag ${tagName} exists. Deleting...`);
              await github.rest.repos.deleteRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: existingRelease.id
              });
              console.log(`Deleted release with tag ${tagName}.`);
            } else {
              console.log(`No release found with tag ${tagName}.`);
            }
