name: Android CI

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Cache Gradle packages
        if: env.skip_build != 'true'
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Check commit message
        id: check_commit
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MESSAGE"
          if [[ "$COMMIT_MESSAGE" == "Increment versionCode to "* ]]; then
            echo "skip_build=true" >> $GITHUB_ENV
          else
            echo "skip_build=false" >> $GITHUB_ENV
          fi

      - name: Set up Java 17
        if: env.skip_build != 'true'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK and NDK
        if: env.skip_build != 'true'
        uses: android-actions/setup-android@v2
        with:
          sdk-version: '33.0.0'
          ndk-version: '27.0.11718014'
          distribution-type: 'sdk'
          build-tools: '33.0.0'

      - name: Calculate Latest Tag
        id: calculate_tag
        run: |
          latest_tag=$(git describe --tags --match "v[0-9]*.[0-9]*.[0-9]*" --abbrev=0 || echo "v1.01.0000")
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV

      - name: Set up signing keystore
        if: env.skip_build != 'true'
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | openssl base64 -d -A -out keystore.jks
          echo "Keystore file created in the root directory."
          
      - name: Create signing.properties
        if: env.skip_build != 'true'
        run: |
          echo "storeFile=../keystore.jks" > signing.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> signing.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> signing.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> signing.properties
          
      - name: Make gradlew executable
        if: env.skip_build != 'true'
        run: chmod +x ./gradlew
        
      - name: List existing tags
        run: |
          git fetch --tags
          git tag -l

      - name: Check and Delete Existing Release
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const tagName = process.env.latest_tag;
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const existingRelease = releases.data.find(release => release.tag_name === tagName);
            if (existingRelease) {
              console.log(`Release with tag ${tagName} exists. Deleting...`);
              await github.rest.repos.deleteRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: existingRelease.id
              });
              await github.rest.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `tags/${tagName}`
              });
              console.log(`Deleted release with tag ${tagName}.`);
            } else {
              console.log(`No release found with tag ${tagName}.`);

      # Continue with other steps...
