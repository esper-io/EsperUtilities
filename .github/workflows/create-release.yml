# File: .github/workflows/create-release.yml

name: Create Release

on:
  workflow_run:
    workflows: ["Android CI"]
    types:
      - completed

permissions:
  contents: write   # Grants permission to create and modify releases

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository with all history and tags
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history including tags

      # 1a. Extract version number without 'v'
      - name: Extract version number
        id: extract_version
        run: |
          TAG=${GITHUB_REF##*/}
          VERSION=${TAG#v}
          echo "versionName=${VERSION}" >> $GITHUB_ENV
          echo "Extracted versionName: $VERSION"

      # 2. Download the APK artifact from the build workflow
      - name: Download APK Artifact
        uses: actions/download-artifact@v3
        with:
          name: io.esper.android.files.apk  # Updated to match upload artifact name
          path: ./release-apk

      # 2a. List downloaded artifacts for verification
      - name: List Downloaded APKs
        run: ls -l ./release-apk/

      # 2b. Verify Downloaded APK Exists
      - name: Verify Downloaded APK Exists
        run: |
          APK_PATH="./release-apk/io.esper.android.files_v${{ env.versionName }}.apk"
          if [ -f "$APK_PATH" ]; then
            echo "APK exists: $APK_PATH"
          else
            echo "Error: APK not found at $APK_PATH"
            exit 1
          fi

      # 3. Create GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ env.versionName }}"  # e.g., v1.01.0001
          release_name: "Release v${{ env.versionName }}"
          body: |
            Changes in this Release:
            - ${{ github.event.workflow_run.head_commit.message }}
          draft: false
          prerelease: false

      # 4. Upload Release APK
      - name: Upload Release APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release-apk/io.esper.android.files_v${{ env.versionName }}.apk
          asset_name: io.esper.android.files_v${{ env.versionName }}.apk
          asset_content_type: application/vnd.android.package-archive
