apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'

buildscript {
    repositories {
        google()
        mavenCentral()
    }
}

def signingPropertiesFile = rootProject.file('signing.properties')
def signingProperties = new Properties()

if (signingPropertiesFile.exists()) {
    signingPropertiesFile.withInputStream { props ->
        signingProperties.load(props)
    }
}

android {
    namespace 'io.esper.android.files'
    buildToolsVersion = '34.0.0'
    compileSdk 34
    ndkVersion '27.0.11718014'
    defaultConfig {
        applicationId 'io.esper.android.files'
        minSdk 21
        targetSdk 34

        // Retrieve version components from environment variables or use default values
        def vMajor = System.getenv("VERSION_MAJOR") ?: "1"
        def vMinor = System.getenv("VERSION_MINOR") ?: "01"
        def buildNumber = System.getenv("BUILD_NUMBER") ?: "0001"

        // Ensure vMinor and buildNumber have leading zeros
        try {
            vMinor = String.format("%02d", vMinor.toInteger())
            buildNumber = String.format("%04d", buildNumber.toInteger())
        } catch (NumberFormatException e) {
            throw new GradleException("VERSION_MAJOR, VERSION_MINOR, and BUILD_NUMBER must be integers.")
        }

        // Construct versionName
        versionName = "${vMajor}.${vMinor}.${buildNumber}"

        // Calculate versionCode
        // Example: versionName = "1.10.0001" => versionCode = 1010001
        versionCode = (vMajor.toInteger() * 1000000) + (vMinor.toInteger() * 1000) + buildNumber.toInteger()

        resValue 'string', 'app_version', versionName + ' (' + versionCode + ')'
        buildConfigField 'String', 'FILE_PROVIDIER_AUTHORITY', 'APPLICATION_ID + ".file_provider"'
        resValue 'string', 'app_provider_authority', applicationId + '.app_provider'
        resValue 'string', 'file_provider_authority', applicationId + '.file_provider'
        externalNativeBuild {
            cmake {
                arguments '-DANDROID_STL=none'
            }
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildFeatures {
        aidl true
        buildConfig true
        viewBinding true
    }
    androidResources {
        generateLocaleConfig true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }
    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }
    lint {
        // For "Invalid package reference in library; not included in Android: javax.security.sasl.
        // Referenced from org.apache.mina.proxy.ProxyAuthException."
        warning 'InvalidPackage', 'MissingTranslation'
    }
    signingConfigs {
        release {
            if (signingProperties.containsKey('storeFile')) {
                storeFile file(signingProperties['storeFile'])
                storePassword signingProperties['storePassword']
                keyAlias signingProperties['keyAlias']
                keyPassword signingProperties['keyPassword']
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "String", "MISSION_CONTROL_API_KEY", "\"${project.MISSION_CONTROL_API_KEY ?: ""}\""
        }
        debug {
            buildConfigField "String", "MISSION_CONTROL_API_KEY", "\"${project.MISSION_CONTROL_API_KEY ?: ""}\""
        }
    }
    packagingOptions {
        jniLibs {
            useLegacyPackaging true
        }
        resources {
            excludes += ['META-INF/DEPENDENCIES',
                         'org/bouncycastle/pqc/crypto/picnic/*']
        }
    }
    bundle {
        language {
            enableSplit = false
        }
    }
}

// Define `versionName` at configuration time
def extractedVersionName = android.defaultConfig.versionName

// Path to versionName output file
def versionNameOutputFile = new File(buildDir, "versionName.txt")

tasks.register("writeVersionNameToFile") {
    group = "verification"
    description = "Writes the version name to a file."

    // Ensure the build directory exists and then write the version name
    doFirst {
        versionNameOutputFile.parentFile.mkdirs() // Ensure the directory exists
        versionNameOutputFile.text = extractedVersionName
    }
}

repositories {
    maven {
        url 'https://jitpack.io'
    }
}
dependencies {
    implementation('com.github.zhanghai:dav4jvm:c317607') {
        exclude group: 'org.ogce', module: 'xpp3'
    }
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation 'com.github.topjohnwu.libsu:service:5.2.2'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // kotlinx-coroutines-android depends on kotlin-stdlib-jdk8
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.lifecycle:lifecycle-service:2.8.6'
    def kotlinx_coroutines_version = '1.8.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"

    implementation 'androidx.activity:activity-ktx:1.9.2'
    // Appcompat 1.7.0-alpha01 is required for properly changing locale below API 24 (b/243119645).
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.drawerlayout:drawerlayout:1.2.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.7'
    implementation 'androidx.fragment:fragment-ktx:1.8.4'
    def androidx_lifecycle_version = '2.8.0'
    implementation "androidx.lifecycle:lifecycle-common-java8:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-process:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidx_lifecycle_version"
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.google.android.material:material:1.12.0'

    implementation 'com.caverock:androidsvg-aar:1.4'
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view-androidx:3.10.0'
    implementation 'com.drakeet.drawer:drawer:1.0.3'
    implementation 'com.h6ah4i.android.materialshadowninepatch:materialshadowninepatch:1.0.0'
    implementation 'com.h6ah4i.android.widget.advrecyclerview:advrecyclerview:1.0.0'
    // SMBJ 0.12.0 breaks anonymous authentication: https://github.com/hierynomus/smbj/issues/792
    //noinspection GradleDependency
    implementation('com.hierynomus:smbj:0.11.5') {
        // org.bouncycastle:bcprov-jdk15on uses bytecode version unsupported by Jetifier, so use
        // org.bouncycastle:bcprov-jdk15to18 instead.
        exclude group: 'org.bouncycastle', module: 'bcprov-jdk15on'
    }
    // SSHJ 0.36.0 requires Java 8.
    //noinspection GradleDependency
    implementation('com.hierynomus:sshj:0.35.0') {
        exclude group: 'org.bouncycastle', module: 'bcprov-jdk15on'
    }
    implementation 'com.jakewharton.threetenabp:threetenabp:1.4.6'
    implementation 'com.leinardi.android:speed-dial:3.3.0'
    implementation('com.rapid7.client:dcerpc:0.12.1') {
        // SMBJ-RPC depends on the JRE flavor of Guava which targets Java 8.
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'org.bouncycastle', module: 'bcprov-jdk15on'
    }
    implementation 'com.google.guava:guava:33.0.0-android'
    // Guava conflicts with com.google.guava:listenablefuture:1.0 pulled in by AndroidX Core
    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
    implementation 'com.takisoft.preferencex:preferencex:1.1.0'
    // Commons Net 3.9.0 started using java.time.Duration in FTPClient.
    //noinspection GradleDependency
    implementation 'commons-net:commons-net:3.8.0'
    // LicensesDialog 2.2.0 pulls in androidx.webkit and uses setForceDark() instead of correctly
    // setting colors.
    //noinspection GradleDependency
    implementation 'de.psdev.licensesdialog:licensesdialog:2.1.0'
    // dev.chrisbanesinsetter:insetter:0.6.0 makes inset unstable when entering immersive.
    implementation 'dev.chrisbanes:insetter-ktx:0.3.1'
    implementation 'dev.rikka.rikkax.preference:simplemenu-preference:1.0.3'
    implementation 'dev.rikka.shizuku:api:13.1.5'
    implementation('eu.agno3.jcifs:jcifs-ng:2.1.10') {
        exclude group: 'org.bouncycastle', module: 'bcprov-jdk18on'
    }
    implementation 'org.bouncycastle:bcprov-jdk15to18:1.77'
    implementation platform('io.coil-kt:coil-bom:2.6.0')
    implementation 'io.coil-kt:coil'
    implementation 'io.coil-kt:coil-gif'
    implementation 'io.coil-kt:coil-svg'
    implementation 'io.coil-kt:coil-video'
    implementation 'me.zhanghai.android.appiconloader:appiconloader:1.5.0'
    implementation 'me.zhanghai.android.fastscroll:library:1.3.0'
    implementation 'me.zhanghai.android.foregroundcompat:library:1.0.2'
    implementation 'me.zhanghai.android.libarchive:library:1.0.3'
    implementation 'me.zhanghai.android.libselinux:library:2.1.0'
    implementation 'me.zhanghai.android.retrofile:library:1.1.1'
    implementation 'me.zhanghai.android.systemuihelper:library:1.0.0'
    implementation 'net.sourceforge.streamsupport:android-retrostreams:1.7.4'
    implementation 'org.apache.ftpserver:ftpserver-core:1.2.0'
    // This is a dependency of org.apache.ftpserver:ftpserver-core but org.apache.mina:mina-core
    // 2.1.3+ became incompatible before API 24 due to dependency on StandardSocketOptions
    // (DIRMINA-1123) and NetworkChannel.supportedOptions() (DIRMINA-1130).
    implementation('org.apache.mina:mina-core') {
        version {
            strictly '2.1.3'
        }
    }
    // Also a dependency of jCIFS-NG.
    implementation 'org.slf4j:slf4j-android:1.7.36'
    implementation 'org.greenrobot:eventbus:3.3.1'
    implementation 'io.esper.devicesdk:app:3.3.0101.27'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    kapt "org.xerial:sqlite-jdbc:3.41.2.2" // Only for computer with M1 CPU

    // 2.2.5 is the prev version, if we want to revert back
    implementation "androidx.room:room-runtime:2.6.1"
    kapt "androidx.room:room-compiler:2.6.1"
    implementation "androidx.room:room-ktx:2.6.1"

    implementation 'android.arch.persistence.room:runtime:1.1.1'
    kapt 'android.arch.persistence.room:compiler:1.1.1'

    implementation 'com.github.bumptech.glide:glide:4.15.1'
    kapt 'com.github.bumptech.glide:compiler:4.13.0'

    implementation 'com.github.andrefrsousa:SuperBottomSheet:2.0.0'
    implementation 'com.github.Ferfalk:SimpleSearchView:0.2.0'
    implementation "net.gotev:uploadservice:4.9.2"
    implementation 'net.lingala.zip4j:zip4j:2.11.5'
    implementation 'com.github.naumanmir:filedownloadservice:1.2'
    implementation 'com.ixuea:android-downloader:3.0.1'
    implementation 'com.github.mhiew:android-pdf-viewer:3.2.0-beta.3'
    implementation 'com.github.amitshekhariitbhu:PRDownloader:1.0.1'
    implementation 'com.google.android.exoplayer:exoplayer:2.19.1'

    implementation "androidx.work:work-runtime-ktx:2.9.1"
}
